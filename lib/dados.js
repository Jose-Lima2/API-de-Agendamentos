// Dados em mem√≥ria para o sistema de agendamento
// ATEN√á√ÉO: Estes dados n√£o persistem entre reinicializa√ß√µes do servidor

// Estrutura de dados para agendamentos
let agendamentos = [];

// Estrutura de dados para fila de espera por hor√°rio
let filaEspera = {};

// Hor√°rios dispon√≠veis (simulando slots de 1 hora das 9h √†s 17h)
const horariosDisponiveis = [
  '09:00', '10:00', '11:00', '12:00', 
  '13:00', '14:00', '15:00', '16:00', '17:00'
];

// Fun√ß√£o para gerar ID √∫nico simples
function gerarId() {
  return Date.now().toString() + Math.random().toString(36).substr(2, 5);
}

// Fun√ß√£o para verificar se hor√°rio est√° dispon√≠vel
function verificarDisponibilidade(data, horario) {
  return !agendamentos.find(ag => 
    ag.data === data && 
    ag.horario === horario && 
    ag.status === 'confirmado'
  );
}

// Fun√ß√£o para adicionar √† fila de espera
function adicionarFilaEspera(data, horario, usuario) {
  const chave = `${data}-${horario}`;
  if (!filaEspera[chave]) {
    filaEspera[chave] = [];
  }
  
  const posicao = {
    id: gerarId(),
    usuario,
    dataHoraCadastro: new Date().toISOString()
  };
  
  filaEspera[chave].push(posicao);
  return posicao;
}

// Fun√ß√£o para processar fila quando hor√°rio √© liberado
function processarFilaEspera(data, horario) {
  const chave = `${data}-${horario}`;
  const fila = filaEspera[chave];
  
  if (fila && fila.length > 0) {
    const proximoUsuario = fila.shift();
    
    // Simular notifica√ß√£o
    console.log(`üì≤ NOTIFICA√á√ÉO: Hor√°rio ${horario} do dia ${data} foi liberado para ${proximoUsuario.usuario}!`);
    
    // Criar agendamento autom√°tico para o pr√≥ximo da fila
    const novoAgendamento = {
      id: gerarId(),
      usuario: proximoUsuario.usuario,
      data,
      horario,
      status: 'confirmado',
      dataAgendamento: new Date().toISOString(),
      origem: 'fila_espera'
    };
    
    agendamentos.push(novoAgendamento);
    
    console.log(`‚úÖ Agendamento autom√°tico criado para ${proximoUsuario.usuario}: ${data} √†s ${horario}`);
    
    return novoAgendamento;
  }
  
  return null;
}

// Exportar fun√ß√µes e dados
module.exports = {
  agendamentos,
  filaEspera,
  horariosDisponiveis,
  gerarId,
  verificarDisponibilidade,
  adicionarFilaEspera,
  processarFilaEspera
}; 